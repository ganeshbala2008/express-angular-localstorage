swagger: "2.0"
info:
  version: 1.0.0
  title: User data store
  description: user store data
basePath: /api
tags:
  - name: User
    description: User endpoints
consumes:
  - application/json
produces:
  - application/json


definitions:
  UserBody:
    type: object
    title: user
    required:
      - id
      - name
    properties:
      id:
        type: integer
        example: 1
        minimum: 1
      name:
        type: string
        example: no_stress
        minLength: 2
        maxLength: 32
      ttl:
        type: integer
        example: 10
        minimum: 1
# Descriptions of common components
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    # Schema for error response body
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

paths:
  /user:
    get:
      tags:
        - User
      description: Fetch all users
      responses:
        200:
          description: Returns all users
    post:
      tags:
        - User
      description: Create a new user
      parameters:
        - name: name
          in: body
          description: create a user
          required: true
          schema: 
            $ref: "#/definitions/UserBody"
      responses:
        201:
          description: Returns on successful save
        400:
          description: Returns on unsuccessful save
  /user/{id}:
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to retrieve
          type: integer
      responses:
        200:
          description: Return the user with the specified id
        404:
          description: user not found
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to delete
          type: integer
      responses:
        200:
          description: Returns on successful delete
        404:
          description: user not found
          $ref: '#/components/responses/NotFound'
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification